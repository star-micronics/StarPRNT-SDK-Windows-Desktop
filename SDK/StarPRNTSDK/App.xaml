<Application x:Class="StarPRNTSDK.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:StarPRNTSDK"
             mc:Ignorable="d" 
             StartupUri="MainWindow.xaml" ShutdownMode="OnMainWindowClose">

    <Application.Resources>
        <local:ResourceManager x:Key="ResourceManager" />

        <local:SelectedModelManager x:Shared="false" x:Key="SelectedModelManager" />

        <local:ReceiptInformationManager x:Shared="false" x:Key="ReceiptInformationManager" />

        <local:DisplayFunctionManager x:Key="DisplayFunctionManager" />

        <Storyboard x:Key="TextAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             AutoReverse="True"
                             RepeatBehavior="Forever"
                             From="1.0" To="0.0" Duration="0:0:1" />
        </Storyboard>

        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ExtStatusTextBlockStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
            <Style.Triggers>
                <EventTrigger RoutedEvent="TextBlock.Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard Name="BeginStoryBoard" Storyboard="{StaticResource TextAnimation}" />
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MainWindowStyle" TargetType="NavigationWindow">
            <Setter Property="Height" Value="{Binding Source={StaticResource ResourceManager}, Path=MainWindowHeight}" />
            <Setter Property="Width" Value="{Binding Source={StaticResource ResourceManager}, Path=MainWindowWidth}" />
            <Setter Property="ResizeMode" Value="NoResize" />
        </Style>

        <Style x:Key="DialogStyle" TargetType="Window">
            <Setter Property="Title" Value="" />
            <Setter Property="SizeToContent" Value="WidthAndHeight" />
            <Setter Property="ResizeMode" Value="NoResize" />
        </Style>

        <Style x:Key="PageTitleStyle" TargetType="Label">
            <Setter Property="FontSize" Value="30" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="White" />
        </Style>

        <Style x:Key="BaseLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="30" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="DialogTitleStyle" TargetType="Label">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="White" />
        </Style>

        <Style x:Key="DialogButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="100" />
        </Style>

        <Style x:Key="CallFunctionButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="30" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Padding" Value="20, 10, 20, 10" />
            <Setter Property="Background" Value="#FFCCCCFF" />
            <Setter Property="BorderBrush" Value="Blue" />
        </Style>

        <Style x:Key="ClearButtonStyle" BasedOn="{StaticResource CallFunctionButtonStyle}" TargetType="Button">
            <Setter Property="Background" Value="#00FFFF" />
        </Style>

        <Style x:Key="ListBoxSeparatorStyle" TargetType="Label">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
        </Style>

        <Style x:Key="ListBoxStyle" TargetType="ListBox">
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="400" />
            <Setter Property="IsIndeterminate" Value="True" />
        </Style>

        <Style x:Key="PasteTextBoxStyle" TargetType="TextBox" >
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Text" Value="{Binding Source={StaticResource ReceiptInformationManager}, Path=PasteTex, Mode=OneWay}"/>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox" >
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox" >
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="2.0" ScaleY="2.0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>

        <ControlTemplate x:Key="ListBoxItemButtonTemplete" TargetType="{x:Type Button}">
            <Border x:Name="border" Background="{TemplateBinding Background}" >
                <ContentPresenter />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="LightBlue" TargetName="border" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <BitmapImage x:Key="RefreshImage" UriSource="Resources/Refresh_Image.png"/>

        <ControlTemplate x:Key="RefreshButtonTemplete" TargetType="{x:Type Button}">
            <ContentControl Width="50" Height="50" >
                <Grid x:Name="Panel" >
                    <Image Source="{StaticResource RefreshImage}" />
                </Grid>
            </ContentControl>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightBlue" TargetName="Panel" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3852A4" TargetName="Panel" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DataTemplate x:Key="ListBoxItemTemplate" DataType="{x:Type local:BaseListBoxItem}">
            <StackPanel Orientation="Vertical" Visibility="{Binding Visibility}" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding ListBoxItemTouchedCommand}" BorderBrush="{x:Null}" Background="{Binding BackGroudColor}" VerticalAlignment="Stretch" Template="{StaticResource ListBoxItemButtonTemplete}" >
                        <Button.Content >
                            <TextBlock x:Name="ButtonText" Text="{Binding Title}" Foreground="{Binding ForeGroundColor}" Background="{x:Null}" VerticalAlignment="Center" Margin="10, 0, 0, 0" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsAnimation}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource TextAnimation}" />
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <StopStoryboard BeginStoryboardName="BeginStoryboard" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button.Content>
                    </Button>

                    <Label Grid.Column="1" Content=">" Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Center" Visibility="{Binding ArrowVisibility}" />
                </Grid>

                <Line VerticalAlignment="Center"
                                      X1="0" X2="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=Self}}"
                                      Y1="0" Y2="0"
                                      Stroke="{Binding BorderBlushColor}" StrokeThickness="2" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ListBoxItemWithCheckBoxTemplate" DataType="{x:Type local:ListBoxItemWithCheckBox}">
            <StackPanel Orientation="Vertical">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding ListBoxItemTouchedCommand}" BorderBrush="{x:Null}" Background="{Binding BackGroudColor}" VerticalAlignment="Stretch" Template="{StaticResource ListBoxItemButtonTemplete}" >
                        <Button.Content >
                            <TextBlock x:Name="ButtonText" Text="{Binding Title}" Foreground="{Binding ForeGroundColor}" Background="{x:Null}" VerticalAlignment="Center" Margin="10, 0, 0, 0" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsAnimation}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource TextAnimation}" />
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <StopStoryboard BeginStoryboardName="BeginStoryboard" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button.Content>
                    </Button>

                    <local:ListBoxItemCheckBox Grid.Column="1" Style="{StaticResource CheckBoxStyle}" Content="{Binding CheckBoxContent}" IsChecked="{Binding CheckBoxIsChecked, Mode=TwoWay}" IsEnabled="{Binding ControlIsEnabled}" Margin="0, 0, 20, 0"/>
                </Grid>

                <Line VerticalAlignment="Center"
                                      X1="0" X2="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=Self}}"
                                      Y1="0" Y2="0"
                                      Stroke="{Binding BorderBlushColor}" StrokeThickness="2" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ListBoxItemWithTextBoxTemplate" DataType="{x:Type local:ListBoxItemWithTextBox}">
            <StackPanel Orientation="Vertical">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding ListBoxItemTouchedCommand}" BorderBrush="{x:Null}" Background="{Binding BackGroudColor}" VerticalAlignment="Stretch" Template="{StaticResource ListBoxItemButtonTemplete}" >
                        <Button.Content >
                            <TextBlock x:Name="ButtonText" Text="{Binding Title}" Foreground="{Binding ForeGroundColor}" Background="{x:Null}" VerticalAlignment="Center" Margin="10, 0, 0, 0" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsAnimation}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource TextAnimation}" />
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <StopStoryboard BeginStoryboardName="BeginStoryboard" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button.Content>
                    </Button>

                    <local:ListBoxItemTextBox Grid.Column="1" Style="{StaticResource TextBoxStyle}" Text="{Binding TextBoxText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" InputMethod.PreferredImeState="{Binding TextBoxPreferredImeState}" InputMethod.PreferredImeConversionMode="{Binding TextBoxPreferredImeConversionMode}" IsEnabled="{Binding ControlIsEnabled}" Width="400" Margin="0, 0, 20, 0"/>
                </Grid>

                <Line VerticalAlignment="Center"
                                      X1="0" X2="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=Self}}"
                                      Y1="0" Y2="0"
                                      Stroke="{Binding BorderBlushColor}" StrokeThickness="2" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ListBoxItemWithComboBoxTemplate" DataType="{x:Type local:ListBoxItemWithComboBox}">
            <StackPanel Orientation="Vertical">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding ListBoxItemTouchedCommand}" BorderBrush="{x:Null}" Background="{Binding BackGroudColor}" VerticalAlignment="Stretch" Template="{StaticResource ListBoxItemButtonTemplete}" >
                        <Button.Content >
                            <TextBlock x:Name="ButtonText" Text="{Binding Title}" Foreground="{Binding ForeGroundColor}" Background="{x:Null}" VerticalAlignment="Center" Margin="10, 0, 0, 0" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsAnimation}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource TextAnimation}" />
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <StopStoryboard BeginStoryboardName="BeginStoryboard" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button.Content>
                    </Button>

                    <ComboBox Grid.Column="1" Style="{StaticResource ComboBoxStyle}" ItemsSource="{Binding ComboBoxContents}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" IsEnabled="{Binding ControlIsEnabled}" Margin="0, 0, 20, 0"/>
                </Grid>

                <Line VerticalAlignment="Center"
                                      X1="0" X2="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=Self}}"
                                      Y1="0" Y2="0"
                                      Stroke="{Binding BorderBlushColor}" StrokeThickness="2" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ListBoxItemWithDetailTemplete" DataType="{x:Type local:ListBoxItemWithDetail}">
            <StackPanel Orientation="Vertical">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Content="{Binding Title}" VerticalAlignment="Center" Margin="10, 0, 0, 0" />

                    <Label Grid.Column="2" Content="{Binding Detail}" Foreground="{Binding ForeGroundColor}" VerticalAlignment="Center" Margin="0, 0, 20, 0" />
                </Grid>

                <Line VerticalAlignment="Center"
                                      X1="0" X2="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=Self}}"
                                      Y1="0" Y2="0"
                                      Stroke="LightGray" StrokeThickness="2" />
            </StackPanel>
        </DataTemplate>

        <local:ReceiptInformationManager x:Key="TextReceipt" x:Shared="false" Type="Text" Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />
        <local:ReceiptInformationManager x:Key="TextReceiptUTF8" x:Shared="false" Type="TextUTF8" Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />
        <local:ReceiptInformationManager x:Key="RasterReceipt" x:Shared="false" Type="Raster"  Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />
        <local:ReceiptInformationManager x:Key="RasterReceiptBothScale" x:Shared="false" Type="RasterBothScale" Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />
        <local:ReceiptInformationManager x:Key="RasterReceiptScale" x:Shared="false" Type="RasterScale" Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />
        <local:ReceiptInformationManager x:Key="RasterCoupon" x:Shared="false" Type="RasterCoupon" Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />
        <local:ReceiptInformationManager x:Key="RasterCouponRotation90" x:Shared="false" Type="RasterCouponRotation90" Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />
        <local:ReceiptInformationManager x:Key="TextLabel" x:Shared="false" Type="TextLabel" Language="{Binding Source={StaticResource ReceiptInformationManager}, Path=Language}" PaperSize="{Binding Source={StaticResource ReceiptInformationManager}, Path=PaperSize}" />

        <local:DisplayFunctionManager x:Key="CheckStatusFunction" Type="CheckStatus" />
        <local:DisplayFunctionManager x:Key="TextFunction" Type="Text" />
        <local:DisplayFunctionManager x:Key="GraphicFunction" Type="Graphic" />
        <local:DisplayFunctionManager x:Key="TurnOnOffFunction" Type="TurnOnOff" />
        <local:DisplayFunctionManager x:Key="CursorFunction" Type="Cursor" />
        <local:DisplayFunctionManager x:Key="ContrastFunction" Type="Contrast" />
        <local:DisplayFunctionManager x:Key="CharacterSetInternationalFunction" Type="CharacterSetInternational" />
        <local:DisplayFunctionManager x:Key="CharacterSetCodePageFunction" Type="CharacterSetCodePage" />
        <local:DisplayFunctionManager x:Key="UserDefinedCharacterFunction" Type="UserDefinedCharacter" />

        <local:CallDisplayExtFunctionClickEvent x:Key="DisplayTextExtCommand" Function="{StaticResource TextFunction}" Executable="True" />
        <local:CallDisplayExtFunctionClickEvent x:Key="DisplayGraphicExtCommand" Function="{StaticResource GraphicFunction}" Executable="True" />
        <local:CallDisplayExtFunctionClickEvent x:Key="DisplayTurnOnOffExtCommand" Function="{StaticResource TurnOnOffFunction}" Executable="True" />
        <local:CallDisplayExtFunctionClickEvent x:Key="DisplayCursorExtCommand" Function="{StaticResource CursorFunction}" Executable="True" />
        <local:CallDisplayExtFunctionClickEvent x:Key="DisplayContrastExtCommand" Function="{StaticResource ContrastFunction}" Executable="True" />
        <local:CallDisplayExtFunctionClickEvent x:Key="DisplayCharacterSetExtCommand" Function="{StaticResource CharacterSetInternationalFunction}" AdditionType="CharacterSetCodePage"  Executable="True" />
        <local:CallDisplayExtFunctionClickEvent x:Key="DisplayUserDefinedCharacterExtCommand" Function="{StaticResource UserDefinedCharacterFunction}" Executable="True" />
        
    </Application.Resources>

</Application>
